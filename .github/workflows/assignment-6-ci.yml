name: CI Assignment 6

on:
  pull_request:
    types:
      - synchronize
      - opened
      - reopened
    paths:
      - 'packages/assignment-6/**'

jobs:
  job1:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18'

      - name: Install pnpm
        run: npm install -g pnpm

      - name: Install dependencies
        run: pnpm install --no-frozen-lockfile

      - name: TypeScript Compile
        run: pnpm run tsc
        continue-on-error: true
        id: tsc

      - name: Build Project
        run: pnpm run build
        continue-on-error: true
        id: build

      - name: Check for tsc errors
        if: failure()
        run: echo "##[error] TypeScript compilation failed."
        continue-on-error: true

      - name: Check for build errors
        if: failure()
        run: echo "##[error] Build failed."
        continue-on-error: true

      - name: Post comment on failure
        if: failure()
        uses: actions/github-script@v3
        with:
          script: |
            const { github } = require('@actions/github');
            const context = github.context;
            const issue_number = context.payload.pull_request.number;
            await github.issues.createComment({
              ...context.repo,
              issue_number,
              body: 'There was an error in the CI workflow. Please check the logs for more details.'
            });

  job2:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18'

      - name: Install pnpm
        run: npm install -g pnpm

      - name: Install dependencies
        run: pnpm install

      - name: Run ESLint
        id: eslint
        run: |
          pnpm eslint . --format json --output-file eslint-report.json
          if [ $? -ne 0 ]; then
            exit 1
          fi

      - name: Post ESLint report on failure
        if: failure()
        uses: actions/github-script@v3
        with:
          script: |
            const fs = require('fs');
            const { github } = require('@actions/github');
            const context = github.context;
            const issue_number = context.payload.pull_request.number;
            const report = JSON.parse(fs.readFileSync('eslint-report.json', 'utf8'));

            let commentBody = '## ESLint Report\n';
            report.forEach(result => {
              commentBody += `### ${result.filePath}\n`;
              result.messages.forEach(msg => {
                commentBody += `- ${msg.message} (line ${msg.line})\n`;
              });
              commentBody += '\n';
            });

            await github.issues.createComment({
              ...context.repo,
              issue_number,
              body: commentBody
            });

  test:
    runs-on: ubuntu-latest
    steps:
      - name: job3 구현
        run: echo "job3의 내용을 구현해주세요"

  lighthouse:
    runs-on: ubuntu-latest
    steps:
      - name: job4 구현
        run: echo "job4의 내용을 구현해주세요"

  assign_reviewer:
    runs-on: ubuntu-latest
    steps:
      - name: job5 구현
        run: echo "job5의 내용을 구현해주세요"
